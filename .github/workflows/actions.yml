name: CI pipeline for the predictor

on: [push]

jobs:
  # test_the_code:

  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.6]

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r prod/requirements.txt
  #   - name: Lint with flake8
  #     run: |
  #       pip install flake8
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  build_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login and pull container
      - run: |
          echo $GH_PW | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin 
          docker pull $GH_REG/$GITHUB_REPOSITORY/champagne_coding:latest

      - name: Build container
        run: docker build . --tag champagne_coding:latest

      - name: Check contents of container
        run: docker run champagne_coding:latest ls -la

      - name: Push container
        run: |
          docker tag champagne_coding:latest $GH_REG/$GITHUB_REPOSITORY/champagne_coding:latest
          docker push $GH_REG/$GITHUB_REPOSITORY/champagne_coding:latest
        env:
          GH_REG: docker.pkg.github.com
          GH_PW: ${{ secrets.GITHUB_TOKEN }}